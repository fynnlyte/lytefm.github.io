[{"categories":null,"contents":"Hello World Dies ist ein Beispielprogramm in Go:\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Führe das Programm wie folgt aus:\n$ go run hello.go     Variables Normale Deklaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Kurzform:\nmsg := \u0026#34;Hello\u0026#34;     Constants const Phi = 1.618     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/notes/go/basic/introduction/","summary":"Hello World Dies ist ein Beispielprogramm in Go:\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Führe das Programm wie folgt aus:\n$ go run hello.go     Variables Normale Deklaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Kurzform:\nmsg := \u0026#34;Hello\u0026#34;     Constants const Phi = 1.618     ","tags":null,"title":"Go Einführung"},{"categories":null,"contents":"Strings str := \u0026#34;Hello\u0026#34; String über mehrere Zeilen\nstr := `Multiline string`     Numbers Übliche Typen\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Weitere Typen\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0}     Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected. Pointer zeigen auf den Ort im Arbeitsspeicher, an dem die Variable gespeichert wird. Go hat eine automatische Garbage-Collection.\n    Type Conversion i := 2 f := float64(i) u := uint(i)     Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;)     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; String über mehrere Zeilen\nstr := `Multiline string`     Numbers Übliche Typen\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Weitere Typen\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [.","tags":null,"title":"Grundlagen: Typen"},{"categories":null,"contents":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!  fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() }     Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() }     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!  fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() }     Loop for count := 0; count \u0026lt;= 10; count++ { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":"Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME}    Bedingung if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/notes/bash/basic/","summary":"Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME}    Bedingung if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi     ","tags":null,"title":"Bash Variablen"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":["Grundlagen"],"contents":"Dieser Beispielpost testet folgendes:\n Kategorie und Unterkategorie in der Seitenleiste „Hero image” und weitere Bilder im Ordner images innerhalb des Ordners für diesen Post Medieninhalte wie Bilder Tweets, YouTube videos, Vimeo videos etc.  Beispielbild  Twitter Beispielpost */}}  -- Youtube Beispielvideo    Vimeo Beispielvideo   ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/posts/category/sub-category/rich-content/","summary":"Dieser Beispielpost testet folgendes:\n Kategorie und Unterkategorie in der Seitenleiste „Hero image” und weitere Bilder im Ordner images innerhalb des Ordners für diesen Post Medieninhalte wie Bilder Tweets, YouTube videos, Vimeo videos etc.  Beispielbild  Twitter Beispielpost */}}  -- Youtube Beispielvideo    Vimeo Beispielvideo   ","tags":["Markdown","Inhalte organisieren","Mehrsprachig"],"title":"Eingebettete Inhalte"},{"categories":["Grundlagen"],"contents":"Hallo! Dies ist ein Einleitungsbeitrag. Er testet:\n Hero image im selben directory Der Post sollte oben in der sidebar sein Der Autor sollte wie im author.yaml sein  ","date":"June 8, 2020","hero":"/de/posts/introduction/hero.svg","permalink":"http://leitow.eu/de/posts/introduction/","summary":"Hallo! Dies ist ein Einleitungsbeitrag. Er testet:\n Hero image im selben directory Der Post sollte oben in der sidebar sein Der Autor sollte wie im author.yaml sein  ","tags":["Grundlagen","Mehrsprachig"],"title":"Einleitung"},{"categories":null,"contents":"Dieser Beispielpost testet:\n Einen anderen Autor Inhaltsverzeichnis Markdown Inhalte Mathematische Formeln Emojis   Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n Math Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n Emoji Rendering 🙈 🙈 🙉 🙉 🙊 🙊\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n   ","date":"June 8, 2020","hero":"/de/posts/markdown-sample/hero.svg","permalink":"http://leitow.eu/de/posts/markdown-sample/","summary":"Dieser Beispielpost testet:\n Einen anderen Autor Inhaltsverzeichnis Markdown Inhalte Mathematische Formeln Emojis   Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown Beispiel"},{"categories":null,"contents":"Dieser Beispielpost testet:\n Standard Hero image Verschiedene shortcodes  Alerts Die folgenden Alerts sind in diesem Theme verfügbar:\nMit type=\u0026quot;success\u0026quot;  Mit type=\u0026quot;danger\u0026quot;  Mittype=\u0026quot;warning\u0026quot;  Mit type=\u0026quot;info\u0026quot;  type=\u0026quot;dark\u0026quot;  Mit `type=\u0026quot;primary\u0026rdquo;  এটা type=\u0026quot;secondary\u0026quot; দিয়ে নমুনা এলার্ট।  ছবি কোন ধরনের attribute ছাড়া ছবির একটি নমুনা।  height এবং width attribute সহ ছবির একটি নমুনা।  height এবং width attribute সহ মাঝখানে স্তাপিত ছবির একটি নমুনা।  float attribute সহ ছবির একটি নমুনা। Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nবিভাজন এই থিম আপনার পেইজকে যত খুশি ভাগে ভাগ করা সমর্থন করে।\nদুই কলামে ভাগ করা বামের কলাম Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.  ডানের কলাম Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.   তিন কলামে ভাগ করা বামের কলাম Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.  মাঝের কলাম Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.  ডানের কলাম Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.   উলম্ব জায়গা দুই লাইনের মাঝে উলম্ব জায়গা দিতে পারেন।\nএটি প্রথম লাইন  এটি দ্বিতীয় লাইন। প্রথম লাইনের সাথে 4rem উলম্বভাবে বাব্যধান থাকার কথা।\n","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"http://leitow.eu/de/posts/shortcodes/","summary":"Dieser Beispielpost testet:\n Standard Hero image Verschiedene shortcodes  Alerts Die folgenden Alerts sind in diesem Theme verfügbar:\nMit type=\u0026quot;success\u0026quot;  Mit type=\u0026quot;danger\u0026quot;  Mittype=\u0026quot;warning\u0026quot;  Mit type=\u0026quot;info\u0026quot;  type=\u0026quot;dark\u0026quot;  Mit `type=\u0026quot;primary\u0026rdquo;  এটা type=\u0026quot;secondary\u0026quot; দিয়ে নমুনা এলার্ট।  ছবি কোন ধরনের attribute ছাড়া ছবির একটি নমুনা।  height এবং width attribute সহ ছবির একটি নমুনা।  height এবং width attribute সহ মাঝখানে স্তাপিত ছবির একটি নমুনা।  float attribute সহ ছবির একটি নমুনা। Lorem ipsum dolor sit amet, consectetur adipiscing elit.","tags":null,"title":"Shortcodes Beispiele"}]